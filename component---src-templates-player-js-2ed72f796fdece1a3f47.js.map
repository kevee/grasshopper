{"version":3,"sources":["webpack:///./src/templates/player.js","webpack:///./src/utilities/player-games.js","webpack:///./src/components/layout/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/components/common/container.js","webpack:///./node_modules/core-js/modules/es7.object.values.js"],"names":["player","data","allAirtable","nodes","getPlayerGames","games","lifetimeScore","lifetimeGames","gameList","Object","values","sort","a","b","Date","title","Player_Name","Nickname","Bio","Glamor_Shot","src","url","alt","map","game","to","recordId","Game_League","League_slug","Name","score","query","Scores","forEach","Game","Score","Number_of_hops","Hops","hop","children","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","Container","styled","div","bp","maxWidth","margin","TextContainer","$export","$values","S"],"mappings":"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","file":"component---src-templates-player-js-2ed72f796fdece1a3f47.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Container } from '../components/common/container'\nimport getPlayerGames from '../utilities/player-games'\n\nexport default ({ data }) => {\n  const { allAirtable } = data\n  const player = allAirtable.nodes[0].data\n  const { games, lifetimeScore, lifetimeGames } = getPlayerGames(player)\n  const gameList = Object.values(games).sort((a, b) => {\n    return a.Date > b.Date ? -1 : 1\n  })\n\n  return (\n    <Layout title={player.Player_Name}>\n      <Container>\n        <h1>{player.Nickname}</h1>\n        <p>\n          <strong>Lifetime score:</strong>\n          {lifetimeScore}\n        </p>\n        <p>\n          <strong>Lifetime games:</strong>\n          {lifetimeGames}\n        </p>\n        <h3>{player.Player_Name}</h3>\n        <p>{player.Bio}</p>\n        {player.Glamor_Shot && <img src={player.Glamor_Shot[0].url} alt=\"\" />}\n        <h2>Games</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>League</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {gameList.map(game => (\n              <tr>\n                <td>\n                  <Link to={`/game/${game.recordId}`}>{game.Date}</Link>\n                </td>\n                <td>\n                  <Link to={`/leage/${game.Game_League[0].data.League_slug}`}>\n                    {game.Game_League[0].data.Name}\n                  </Link>\n                </td>\n                <td>{game.score}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allAirtable(\n      filter: { table: { eq: \"Players\" }, data: { Player_slug: { eq: $slug } } }\n    ) {\n      nodes {\n        data {\n          Player_Name\n          Player_slug\n          League {\n            data {\n              Name\n            }\n          }\n          Nickname\n          Bio\n          Glamor_Shot {\n            url\n            thumbnails {\n              large {\n                url\n              }\n              full {\n                url\n              }\n            }\n          }\n          Scores {\n            data {\n              Score\n              Game {\n                recordId\n                data {\n                  Date\n                  Number_of_hops\n                  Game_League {\n                    data {\n                      Name\n                      League_slug\n                    }\n                  }\n                }\n              }\n            }\n          }\n          Hops {\n            data {\n              Score\n              Game {\n                recordId\n                data {\n                  Date\n                  Number_of_hops\n                  Game_League {\n                    data {\n                      Name\n                      League_slug\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default player => {\n  const games = {}\n  let lifetimeScore = 0\n  let lifetimeGames = 0\n  if (player.Scores) {\n    player.Scores.forEach(score => {\n      if (score.data.Game) {\n        lifetimeScore += score.data.Score\n        lifetimeGames += score.data.Game[0].data.Number_of_hops / 3\n        games[score.data.Game[0].recordId] = {\n          recordId: score.data.Game[0].recordId,\n          ...score.data.Game[0].data,\n          score: score.data.Score,\n        }\n      }\n    })\n  }\n  if (player.Hops) {\n    player.Hops.forEach(hop => {\n      if (hop.data.Game) {\n        lifetimeScore += hop.data.Score\n        lifetimeGames += hop.data.Game[0].data.Number_of_hops / 3\n        if (typeof games[hop.data.Game[0].recordId] === 'undefined') {\n          games[hop.data.Game[0].recordId] = {\n            recordId: hop.data.Game[0].recordId,\n            ...hop.data.Game[0].data,\n            score: hop.data.Score,\n          }\n        } else {\n          games[hop.data.Game[0].recordId].score += hop.data.Score\n        }\n      }\n    })\n  }\n  return { games, lifetimeScore, lifetimeGames }\n}\n","import React from 'react'\nimport SEO from './seo'\nimport { SkipNavLink, SkipNavContent } from '@reach/skip-nav'\nimport '@reach/skip-nav/styles.css'\nimport Header from './header'\nimport '../../style/global.css'\n\nexport default ({ title, children }) => (\n  <>\n    <SkipNavLink />\n    <SEO title={title} />\n    <Header title={title} />\n    <main>\n      <SkipNavContent />\n      {children}\n    </main>\n  </>\n)\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","import bp from '../../style/breakpoints'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div`\n  ${bp({\n    maxWidth: ['100%', '100%', '1100px'],\n    margin: ['0 1rem', '0 1rem', '0 auto'],\n  })}\n`\n\nconst TextContainer = styled.div`\n  ${bp({\n    maxWidth: ['100%', '100%', '60ch'],\n    margin: ['0 1rem', '0 1rem', '0 auto'],\n  })}\n`\n\nexport { Container, TextContainer }\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"sourceRoot":""}