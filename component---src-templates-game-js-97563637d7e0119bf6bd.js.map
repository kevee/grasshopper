{"version":3,"sources":["webpack:///./src/templates/game.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/common/container.js"],"names":["GameScoreTable","scores","sort","a","b","data","Score","map","to","Player","Player_slug","Player_Name","game","allAirtable","nodes","title","Name","Date","Game_League","League_slug","Game_Scores","query","children","Container","styled","div","bp","maxWidth","margin","TextContainer"],"mappings":"iNAKMA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACrB,oCACGA,EACEC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,OAAS,EAAI,KACnDC,KAAI,gBAAGF,EAAH,EAAGA,KAAH,OACH,4BACE,4BACE,kBAAC,OAAD,CAAMG,GAAE,WAAaH,EAAKI,OAAO,GAAGJ,KAAKK,aACtCL,EAAKI,OAAO,GAAGJ,KAAKM,cAGzB,4BAAKN,EAAKC,aAML,sBAAe,IAEtBM,EAFqB,EAAXP,KACRQ,YACiBC,MAAM,GAAGT,KAClC,OACE,kBAAC,IAAD,CAAQU,MAAOH,EAAKI,MAClB,kBAAC,IAAD,KACE,4BACGJ,EAAKI,KADR,IACeJ,EAAKK,MAEpB,2BACE,kBAAC,OAAD,CAAMT,GAAE,WAAaI,EAAKM,YAAY,GAAGb,KAAKc,aAC3CP,EAAKM,YAAY,GAAGb,KAAKW,OAG9B,+BACE,+BACE,4BACE,sCACA,uCAGJ,+BACGJ,EAAKQ,aAAe,kBAACpB,EAAD,CAAgBC,OAAQW,EAAKQ,mBAQvD,IAAMC,EAAK,c,oCCpDlB,mFAOe,oBAAGN,EAAH,EAAGA,MAAOO,EAAV,EAAUA,SAAV,OACb,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKP,MAAOA,IACZ,kBAAC,IAAD,CAAQA,MAAOA,IACf,8BACE,kBAAC,IAAD,MACCO,M,6TCXP,IAAMC,EAAYC,UAAOC,IAAV,IACXC,YAAG,CACHC,SAAU,CAAC,OAAQ,OAAQ,UAC3BC,OAAQ,CAAC,SAAU,SAAU,aAI3BC,EAAgBL,UAAOC,IAAV,IACfC,YAAG,CACHC,SAAU,CAAC,OAAQ,OAAQ,QAC3BC,OAAQ,CAAC,SAAU,SAAU","file":"component---src-templates-game-js-97563637d7e0119bf6bd.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Container } from '../components/common/container'\n\nconst GameScoreTable = ({ scores }) => (\n  <>\n    {scores\n      .sort((a, b) => (a.data.Score > b.data.Score ? -1 : 1))\n      .map(({ data }) => (\n        <tr>\n          <td>\n            <Link to={`/player/${data.Player[0].data.Player_slug}`}>\n              {data.Player[0].data.Player_Name}\n            </Link>\n          </td>\n          <td>{data.Score}</td>\n        </tr>\n      ))}\n  </>\n)\n\nexport default ({ data }) => {\n  const { allAirtable } = data\n  const game = allAirtable.nodes[0].data\n  return (\n    <Layout title={game.Name}>\n      <Container>\n        <h1>\n          {game.Name} {game.Date}\n        </h1>\n        <p>\n          <Link to={`/league/${game.Game_League[0].data.League_slug}`}>\n            {game.Game_League[0].data.Name}\n          </Link>\n        </p>\n        <table>\n          <thead>\n            <tr>\n              <th>Player</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {game.Game_Scores && <GameScoreTable scores={game.Game_Scores} />}\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($recordId: String!) {\n    allAirtable(\n      filter: { table: { eq: \"Games\" }, recordId: { eq: $recordId } }\n    ) {\n      nodes {\n        data {\n          Game_League {\n            data {\n              League_slug\n              Name\n            }\n          }\n          Game_Scores {\n            data {\n              Score\n              Player {\n                data {\n                  Player_slug\n                  Player_Name\n                  Nickname\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport SEO from './seo'\nimport { SkipNavLink, SkipNavContent } from '@reach/skip-nav'\nimport '@reach/skip-nav/styles.css'\nimport Header from './header'\nimport '../../style/global.css'\n\nexport default ({ title, children }) => (\n  <>\n    <SkipNavLink />\n    <SEO title={title} />\n    <Header title={title} />\n    <main>\n      <SkipNavContent />\n      {children}\n    </main>\n  </>\n)\n","import bp from '../../style/breakpoints'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div`\n  ${bp({\n    maxWidth: ['100%', '100%', '1100px'],\n    margin: ['0 1rem', '0 1rem', '0 auto'],\n  })}\n`\n\nconst TextContainer = styled.div`\n  ${bp({\n    maxWidth: ['100%', '100%', '60ch'],\n    margin: ['0 1rem', '0 1rem', '0 auto'],\n  })}\n`\n\nexport { Container, TextContainer }\n"],"sourceRoot":""}