{"version":3,"sources":["webpack:///./src/templates/player.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es7.object.values.js"],"names":["player","data","allAirtable","nodes","lifetimeScore","lifetimeGames","games","Scores","forEach","score","Game","Score","Number_of_hops","recordId","Hops","hop","gameList","Object","values","sort","a","b","Date","title","Player_Name","Nickname","Bio","Glamor_Shot","src","url","alt","map","game","to","Game_League","League_slug","Name","query","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","$values","S"],"mappings":"oQAKe,sBAAe,IAEtBA,EAFqB,EAAXC,KACRC,YACmBC,MAAM,GAAGF,KAChCG,EAAgB,EAChBC,EAAgB,EACdC,EAAQ,GACVN,EAAOO,QACTP,EAAOO,OAAOC,SAAQ,SAAAC,GAChBA,EAAMR,KAAKS,OACbN,GAAiBK,EAAMR,KAAKU,MAC5BN,GAAiBI,EAAMR,KAAKS,KAAK,GAAGT,KAAKW,eAAiB,EAC1DN,EAAMG,EAAMR,KAAKS,KAAK,GAAGG,UAAzB,6BACEA,SAAUJ,EAAMR,KAAKS,KAAK,GAAGG,UAC1BJ,EAAMR,KAAKS,KAAK,GAAGT,MAFxB,IAGEQ,MAAOA,EAAMR,KAAKU,YAKtBX,EAAOc,MACTd,EAAOc,KAAKN,SAAQ,SAAAO,GACdA,EAAId,KAAKS,OACXN,GAAiBW,EAAId,KAAKU,MAC1BN,GAAiBU,EAAId,KAAKS,KAAK,GAAGT,KAAKW,eAAiB,OACR,IAArCN,EAAMS,EAAId,KAAKS,KAAK,GAAGG,UAChCP,EAAMS,EAAId,KAAKS,KAAK,GAAGG,UAAvB,6BACEA,SAAUE,EAAId,KAAKS,KAAK,GAAGG,UACxBE,EAAId,KAAKS,KAAK,GAAGT,MAFtB,IAGEQ,MAAOM,EAAId,KAAKU,QAGlBL,EAAMS,EAAId,KAAKS,KAAK,GAAGG,UAAUJ,OAASM,EAAId,KAAKU,UAK3D,IAAMK,EAAWC,OAAOC,OAAOZ,GAAOa,MAAK,SAACC,EAAGC,GAC7C,OAAOD,EAAEE,KAAOD,EAAEC,MAAQ,EAAI,KAGhC,OACE,kBAAC,IAAD,CAAQC,MAAOvB,EAAOwB,aACpB,kBAAC,IAAD,KACE,4BAAKxB,EAAOyB,UACZ,2BACE,mDACCrB,GAEH,2BACE,mDACCC,GAEH,4BAAKL,EAAOwB,aACZ,2BAAIxB,EAAO0B,KACV1B,EAAO2B,aAAe,yBAAKC,IAAK5B,EAAO2B,YAAY,GAAGE,IAAKC,IAAI,KAChE,qCACA,+BACE,+BACE,4BACE,oCACA,sCACA,uCAGJ,+BACGd,EAASe,KAAI,SAAAC,GAAI,OAChB,4BACE,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWD,EAAKnB,UAAamB,EAAKV,OAE5C,4BACE,kBAAC,OAAD,CAAMW,GAAE,UAAYD,EAAKE,YAAY,GAAGjC,KAAKkC,aAC1CH,EAAKE,YAAY,GAAGjC,KAAKmC,OAG9B,4BAAKJ,EAAKvB,gBAUnB,IAAM4B,EAAK,c,qBC1FlB,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUC,GAOf,IANA,IAKIC,EALAC,EAAIR,EAAUM,GACdG,EAAOV,EAAQS,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdJ,EAAME,EAAKE,KACNb,IAAeG,EAAOY,KAAKL,EAAGD,IACjCK,EAAOE,KAAKT,EAAY,CAACE,EAAKC,EAAED,IAAQC,EAAED,IAG9C,OAAOK,K,qBCjBX,IAAIG,EAAU,EAAQ,QAClBC,EAAU,EAAQ,OAAR,EAA8B,GAE5CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BvC,OAAQ,SAAgB4B,GACtB,OAAOU,EAAQV","file":"component---src-templates-player-js-9018974b09e865db9e00.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Container } from '../components/common/container'\n\nexport default ({ data }) => {\n  const { allAirtable } = data\n  const player = allAirtable.nodes[0].data\n  let lifetimeScore = 0\n  let lifetimeGames = 0\n  const games = {}\n  if (player.Scores) {\n    player.Scores.forEach(score => {\n      if (score.data.Game) {\n        lifetimeScore += score.data.Score\n        lifetimeGames += score.data.Game[0].data.Number_of_hops / 3\n        games[score.data.Game[0].recordId] = {\n          recordId: score.data.Game[0].recordId,\n          ...score.data.Game[0].data,\n          score: score.data.Score,\n        }\n      }\n    })\n  }\n  if (player.Hops) {\n    player.Hops.forEach(hop => {\n      if (hop.data.Game) {\n        lifetimeScore += hop.data.Score\n        lifetimeGames += hop.data.Game[0].data.Number_of_hops / 3\n        if (typeof games[hop.data.Game[0].recordId] === 'undefined') {\n          games[hop.data.Game[0].recordId] = {\n            recordId: hop.data.Game[0].recordId,\n            ...hop.data.Game[0].data,\n            score: hop.data.Score,\n          }\n        } else {\n          games[hop.data.Game[0].recordId].score += hop.data.Score\n        }\n      }\n    })\n  }\n  const gameList = Object.values(games).sort((a, b) => {\n    return a.Date > b.Date ? -1 : 1\n  })\n\n  return (\n    <Layout title={player.Player_Name}>\n      <Container>\n        <h1>{player.Nickname}</h1>\n        <p>\n          <strong>Lifetime score:</strong>\n          {lifetimeScore}\n        </p>\n        <p>\n          <strong>Lifetime games:</strong>\n          {lifetimeGames}\n        </p>\n        <h3>{player.Player_Name}</h3>\n        <p>{player.Bio}</p>\n        {player.Glamor_Shot && <img src={player.Glamor_Shot[0].url} alt=\"\" />}\n        <h2>Games</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>League</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {gameList.map(game => (\n              <tr>\n                <td>\n                  <Link to={`/game/${game.recordId}`}>{game.Date}</Link>\n                </td>\n                <td>\n                  <Link to={`/leage/${game.Game_League[0].data.League_slug}`}>\n                    {game.Game_League[0].data.Name}\n                  </Link>\n                </td>\n                <td>{game.score}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allAirtable(\n      filter: { table: { eq: \"Players\" }, data: { Player_slug: { eq: $slug } } }\n    ) {\n      nodes {\n        data {\n          Player_Name\n          Player_slug\n          League {\n            data {\n              Name\n            }\n          }\n          Nickname\n          Bio\n          Glamor_Shot {\n            url\n            thumbnails {\n              large {\n                url\n              }\n              full {\n                url\n              }\n            }\n          }\n          Scores {\n            data {\n              Score\n              Game {\n                recordId\n                data {\n                  Date\n                  Number_of_hops\n                  Game_League {\n                    data {\n                      Name\n                      League_slug\n                    }\n                  }\n                }\n              }\n            }\n          }\n          Hops {\n            data {\n              Score\n              Game {\n                recordId\n                data {\n                  Date\n                  Number_of_hops\n                  Game_League {\n                    data {\n                      Name\n                      League_slug\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"sourceRoot":""}